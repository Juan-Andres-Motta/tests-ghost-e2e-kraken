const { Given, When, Then } = require("@cucumber/cucumber");
import { expect, Page } from "@playwright/test";
import { IPlaywrightWorld } from "../world";
const { faker } = require("@faker-js/faker");

let TITLE = faker.word.words(3);
let BODY = faker.lorem.paragraph(2);
let NAME4 = faker.lorem.word();
let NAME5 = faker.lorem.word();
let NAME6 = "";

let NAME: string | null = "";

When("Login", async function (this: IPlaywrightWorld) {
	await this.page.goto(
		"https://ghost.juanandresdeveloper.com/ghost/#/signin"
	);
	await this.page.getByLabel("Email address").fill("admin@example.com");
	await this.page.getByLabel("Password").fill("admin12345");
	await this.page.getByRole("button", { name: /Sign in/i }).click();
	await this.page.waitForURL(
		`https://ghost.juanandresdeveloper.com/ghost/#/dashboard`
	);
});

// Scenario: Create a new tag

Then("I click on Tags button 4", async function (this: IPlaywrightWorld) {
	let tagsButton = await this.page.$('a[data-test-nav="tags"]');
	if (tagsButton) {
		await tagsButton.click();
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression Tags button 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Tags-button-4.png`,
		});
	}
);

Then("I click on new Tag button 4", async function (this: IPlaywrightWorld) {
	let newTagButton = await this.page.$('a[href="#/tags/new/"]');
	if (newTagButton) {
		await newTagButton.click();
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression new Tag button 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/new-Tag-button-4.png`,
		});
	}
);

Then("I enter a tag name input 4", async function (this: IPlaywrightWorld) {
	let tagNameInput = await this.page.$('input[data-test-input="tag-name"]');
	if (tagNameInput) {
		await tagNameInput.fill(NAME4);
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression tag name input 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/tag-name-input-4.png`,
		});
	}
);

Then("I enter a tag color input 4", async function (this: IPlaywrightWorld) {
	let tagColorInput = await this.page.$(
		'input[data-test-input="accentColor"]'
	);
	if (tagColorInput) {
		await tagColorInput.fill(faker.internet.color().slice(1, 7));
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression tag color input 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/tag-color-input-4.png`,
		});
	}
);

Then("I enter a slug input 4", async function (this: IPlaywrightWorld) {
	let slugInput = await this.page.$('input[data-test-input="tag-slug"]');
	if (slugInput) {
		await slugInput.fill(faker.lorem.word());
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression slug input 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/slug-input-4.png`,
		});
	}
);

Then("I enter a description input 4", async function (this: IPlaywrightWorld) {
	let descriptionInput = await this.page.$(
		'textarea[data-test-input="tag-description"]'
	);
	if (descriptionInput) {
		await descriptionInput.fill(faker.lorem.sentence());
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression description input 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/description-input-4.png`,
		});
	}
);

Then("I click on Save button 4", async function (this: IPlaywrightWorld) {
	let saveButton = await this.page.$('button[data-test-button="save"]');
	if (saveButton) {
		await saveButton.click();
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression Save button 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Save-button-4.png`,
		});
	}
);

Then("I click on back to tags 4", async function (this: IPlaywrightWorld) {
	let backToTagsButton = await this.page.$('a[href="#/tags/"]');
	if (backToTagsButton) {
		await backToTagsButton.click();
	}
	await this.page.waitForTimeout(2000);
});

Then(
	"Take screenshot for visual regression back to tags 4",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/back-to-tags-4.png`,
		});
	}
);

Then("I find the tag created 4", async function (this: IPlaywrightWorld) {
	let h3Found = false;
	let tagCreated = await this.page.$$("h3");
	for (let element of tagCreated) {
		if ((await element.innerText()) == NAME4) {
			h3Found = true;
			break;
		}
	}
	expect(h3Found).toBeTruthy();
	await this.page.waitForTimeout(2000);
});

// Scenario: Update a tag

Then("I click on tags button 5", async function (this: IPlaywrightWorld) {
	await this.page.click('a[href="#/tags/"]');
	await this.page.waitForTimeout(1000);
});

Then(
	"Take screenshot for visual regression tags button 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Tags-button-5.png`,
		});
	}
);

Then("I click on a random tag 5", async function (this: IPlaywrightWorld) {
	let tags = await this.page.$$("h3");
	let randomTag = tags[Math.floor(Math.random() * tags.length)];
	await randomTag.click();
	await this.page.waitForTimeout(1000);
});

Then(
	"Take screenshot for visual regression random tag 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Random-tag-5.png`,
		});
	}
);

Then(
	"I clear and enter a tag name input 5",
	async function (this: IPlaywrightWorld) {
		let tagNameInput = await this.page.$(
			'input[data-test-input="tag-name"]'
		);
		await tagNameInput!.fill(NAME5);
		await this.page.waitForTimeout(1000);
	}
);

Then(
	"Take screenshot for visual regression tag name input 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Tag-name-input-5.png`,
		});
	}
);

Then(
	"I clear and enter a tag color input 5",
	async function (this: IPlaywrightWorld) {
		let tagColorInput = await this.page.$(
			'input[data-test-input="accentColor"]'
		);
		await tagColorInput!.fill(faker.internet.color().slice(1, 7));
		await this.page.waitForTimeout(1000);
	}
);

Then(
	"Take screenshot for visual regression tag color input 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Tag-color-input-5.png`,
		});
	}
);

Then(
	"I clear and enter a slug input 5",
	async function (this: IPlaywrightWorld) {
		let slugInput = await this.page.$('input[data-test-input="tag-slug"]');
		await slugInput!.fill(faker.lorem.word());
		await this.page.waitForTimeout(1000);
	}
);

Then(
	"Take screenshot for visual regression slug input 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Slug-input-5.png`,
		});
	}
);

Then(
	"I clear and enter a description input 5",
	async function (this: IPlaywrightWorld) {
		let descriptionInput = await this.page.$(
			'textarea[data-test-input="tag-description"]'
		);
		await descriptionInput!.fill(faker.lorem.sentence());
		await this.page.waitForTimeout(1000);
	}
);

Then(
	"Take screenshot for visual regression description input 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Description-input-5.png`,
		});
	}
);

Then("I click on Save button 5", async function (this: IPlaywrightWorld) {
	let saveButton = await this.page.$('button[data-test-button="save"]');
	await saveButton!.click();
	await this.page.waitForTimeout(1000);
});

Then(
	"Take screenshot for visual regression Save button 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Save-button-5.png`,
		});
	}
);

Then("I click on back to tags 5", async function (this: IPlaywrightWorld) {
	let backToTagsButton = await this.page.$('a[href="#/tags/"]');
	await backToTagsButton!.click();
	await this.page.waitForTimeout(1000);
});

Then(
	"Take screenshot for visual regression back to tags 5",
	async function (this: IPlaywrightWorld) {
		await this.page.screenshot({
			path: `e2e/screenshots2/Back-to-tags-5.png`,
		});
	}
);

Then("I find the tag created 5", async function (this: IPlaywrightWorld) {
	let h3Found = false;
	let tagCreated = await this.page.$$("h3");
	for (let element of tagCreated) {
		if ((await element.innerText()) == NAME5) {
			h3Found = true;
			break;
		}
	}
	expect(h3Found).toBeTruthy();
	await this.page.waitForTimeout(1000);
});